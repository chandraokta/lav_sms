<?php

namespace App\Http\Controllers\SupportTeam;

use App\Http\Controllers\Controller;
use App\Models\Attendance;
use App\Models\MyClass;
use App\Models\StudentRecord;
use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;

class AttendanceController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $classes = MyClass::all();
        return view('absensi.rekap', compact('classes'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $classes = MyClass::all();
        return view('absensi.create', compact('classes'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $request->validate([
            'class_id' => 'required|integer',
            'date' => 'required|date',
        ]);

        $class_id = $request->class_id;
        $date = $request->date;

        // Check if attendance already exists for this class and date
        $existing = Attendance::where(['my_class_id' => $class_id, 'date' => $date])->first();
        if ($existing) {
            // If attendance exists, redirect to edit mode with info message
            return redirect()->route('absensi.edit', ['class_id' => $class_id, 'date' => $date])
                ->with('flash_info', 'Attendance records already exist for this class and date. You can edit them below.');
        }

        // Get students in the class
        $students = StudentRecord::where('my_class_id', $class_id)->with('user')->get();

        // Jika tidak ada siswa dalam kelas, kembali ke halaman create
        if ($students->isEmpty()) {
            return back()->with('flash_danger', 'No students found in this class!');
        }

        return view('absensi.manage', compact('students', 'class_id', 'date'));
    }

    /**
     * Show the form for editing existing attendance.
     *
     * @param  int  $class_id
     * @param  string  $date
     * @return \Illuminate\Http\Response
     */
    public function edit($class_id, $date)
    {
        // Get existing attendance records
        $attendances = Attendance::where(['my_class_id' => $class_id, 'date' => $date])->get();
        
        // If no attendance records found, redirect back
        if ($attendances->isEmpty()) {
            return back()->with('flash_danger', 'No attendance records found for this class and date!');
        }

        // Get students in the class
        $students = StudentRecord::where('my_class_id', $class_id)->with('user')->get();

        // Jika tidak ada siswa dalam kelas, kembali ke halaman create
        if ($students->isEmpty()) {
            return back()->with('flash_danger', 'No students found in this class!');
        }

        return view('absensi.edit', compact('students', 'class_id', 'date', 'attendances'));
    }

    /**
     * Update existing attendance records.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $class_id
     * @param  string  $date
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $class_id, $date)
    {
        try {
            $request->validate([
                'students' => 'required|array',
            ]);

            $students = $request->students;

            // Update attendance records
            foreach ($students as $student_id => $status) {
                // Find existing record or create new one
                $attendance = Attendance::where([
                    'student_id' => $student_id,
                    'my_class_id' => $class_id,
                    'date' => $date
                ])->first();

                if ($attendance) {
                    // Update existing record
                    $attendance->update(['status' => $status]);
                } else {
                    // Create new record if it doesn't exist
                    Attendance::create([
                        'student_id' => $student_id,
                        'my_class_id' => $class_id,
                        'date' => $date,
                        'status' => $status,
                    ]);
                }
            }

            return redirect()->route('absensi.create')->with('flash_success', 'Attendance records updated successfully!');
        } catch (\Exception $e) {
            return back()->with('flash_danger', 'Error updating attendance records: ' . $e->getMessage());
        }
    }

    /**
     * Store the attendance records.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function manage(Request $request)
    {
        try {
            $request->validate([
                'class_id' => 'required|integer',
                'date' => 'required|date',
                'students' => 'required|array',
            ]);

            $class_id = $request->class_id;
            $date = $request->date;
            $students = $request->students;

            // Save attendance records
            foreach ($students as $student_id => $status) {
                Attendance::create([
                    'student_id' => $student_id,
                    'my_class_id' => $class_id,
                    'date' => $date,
                    'status' => $status,
                ]);
            }

            return redirect()->route('absensi.create')->with('flash_success', 'Attendance records saved successfully!');
        } catch (\Exception $e) {
            return back()->with('flash_danger', 'Error saving attendance records: ' . $e->getMessage());
        }
    }

    /**
     * Display attendance records.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function show(Request $request)
    {
        $request->validate([
            'class_id' => 'required|integer',
            'date' => 'required|date',
        ]);

        $class_id = $request->class_id;
        $date = $request->date;

        $attendances = Attendance::where(['my_class_id' => $class_id, 'date' => $date])
            ->with(['student', 'myClass'])
            ->get();

        $class = MyClass::find($class_id);

        return view('absensi.show', compact('attendances', 'class', 'date'));
    }

    /**
     * Show attendance records for a specific class.
     *
     * @param  int  $class_id
     * @return \Illuminate\Http\Response
     */
    public function classAttendance($class_id)
    {
        $attendances = Attendance::where('my_class_id', $class_id)
            ->with(['student', 'myClass'])
            ->orderBy('date', 'desc')
            ->get()
            ->groupBy('date');

        $class = MyClass::find($class_id);

        return view('absensi.class', compact('attendances', 'class'));
    }
}